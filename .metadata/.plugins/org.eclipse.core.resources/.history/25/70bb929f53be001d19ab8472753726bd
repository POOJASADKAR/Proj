package com.app.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.dto.Responsedto;
import com.app.entities.Category;
import com.app.entities.Customer;
import com.app.entities.Product;
import com.app.service.CategoryService;
import com.app.service.ProductService;

@RestController
@RequestMapping("/products")
@CrossOrigin(origins = "http://localhost:3306")
public class ProductController {
	
	@Autowired
	private ProductService prodservice;
	
	@Autowired
	private CategoryService catservice;
	
//	public ProductController() {
//		System.out.println("in product controller");
//	}
//	

	 @GetMapping("/{CategoryName}") 
	public ResponseEntity<?>getallprodByCategory(@PathVariable String CategoryName){
		List<Product> prod=prodservice.findByName(CategoryName);
		return new ResponseEntity<>((prodservice.getallProducts()),HttpStatus.OK) ;
	}
	
	 @PostMapping("/add")
	    public ResponseEntity<Product> createProduct(@RequestBody Product product) {
	        prodservice.addProduct(product);
	        return new ResponseEntity<>(product, HttpStatus.OK);
	    }
	 
	 @PutMapping("/{id}")
	    public ResponseEntity<Product> updateProduct(@PathVariable("id") Long id, @RequestBody Product product) {
		 return new ResponseEntity<Product>(HttpStatus.CREATED);
	 }
	 @DeleteMapping("/delete/{id}")
	 public String deleteProduct(@PathVariable Long id) {
		 this.prodService.deleteCustomerbyId(Long.parseUnsignedLong(id));
		   return new ResponseEntity<Customer>(HttpStatus.OK);
		 
	 }
//		@GetMapping("/Product")
//		public List<Product> getProduct(){
//			return this.prod.getProduct();
//			
//		}
		 
	 

}
